{"version":3,"sources":["components/SearchBox.jsx","components/Card.jsx","components/CardList.jsx","components/Scroll.jsx","containers/App.jsx","actions.jsx","constants.jsx","reducers.jsx","index.jsx"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","name","email","id","alt","src","CardList","robots","map","user","i","key","Scroll","props","style","overflowY","border","height","children","App","this","onRequestRobots","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","Component","connect","state","searchRobots","requestRobots","error","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd7f5607.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--light-blue bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img alt=\"robot\" src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"2px translucent\",\n        height: \"750px\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport SearchBox from \"../components/SearchBox\";\nimport CardList from \"../components/CardList\";\nimport Scroll from \"../components/Scroll\";\nimport { setSearchField, requestRobots } from \"../actions.jsx\";\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots()),\n  };\n};\n\nclass App extends Component {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     robots: [],\n  //     // searchfield: \"\",\n  //   };\n  // }\n\n  componentDidMount() {\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\n    //   .then((response) => response.json())\n    //   .then((users) => this.setState({ robots: users }));\n    this.props.onRequestRobots();\n  }\n\n  // onSearchChange = (event) => {\n  //   this.setState({ searchfield: event.target.value });\n  // };\n\n  render() {\n    // const { robots } = this.state; //searchfield\n    const { searchField, onSearchChange, robots, isPending } = this.props;\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    // if (!robots.length) {\n    //   return <h1 className=\"tc\">Loading...</h1>;\n    // } else {\n\n    return isPending ? (\n      <h1 className=\"tc\">Loading...</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboDex</h1>\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants.jsx\";\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n\n// higher order func --> a func that returns a func\n// react-middleware-thunk is what allows us to do this bc redux woudl expect obj otherwise\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  // asynch fetch call\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch((error) =>\n      dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error })\n    );\n};\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n\n// bc promise, it has three states\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants.jsx\";\n\nconst initialStateSearch = {\n  searchField: \"\",\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  //   console.log(action.type);\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    // return { ...state, searchField: action.payload }\n    default:\n      return state;\n  }\n};\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: \"\",\n};\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false,\n      });\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false,\n      });\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport App from \"./containers/App\";\nimport \"./styles/_index.scss\";\nimport \"tachyons\";\nimport { searchRobots, requestRobots } from \"./reducers\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}